<?xml version="1.0" encoding="utf-8" ?>


<Configuration status="WARN" monitorIntervial="1800">
    <!-- monitorInterval="1800" 指log4j2每隔1800秒（半小时），自动监控该配置文件是否有变化，如果变化，则自动根据文件内容重新配置 -->
    <!--status是设置日志级别，共有 OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL八个级别-->
      <!--All:最低等级的，用于打开所有日志记录.-->

    <!--　　　　　　Trace:是追踪，就是程序推进以下，你就可以写个trace输出，所以trace应该会特别多，不过没关系，我们可以设置最低日志级别不让他输出.-->

    <!--　　　　　　Debug:指出细粒度信息事件对调试应用程序是非常有帮助的.-->

    <!--　　　　　　Info:消息在粗粒度级别上突出强调应用程序的运行过程.-->

    <!--　　　　　　Warn:输出警告及warn以下级别的日志.-->

    <!--　　　　　　Error:输出错误信息日志.-->

    <!--　　　　　　Fatal:输出每个严重的错误事件将会导致应用程序的退出的日志.-->

    <!--　　　　　　OFF:最高等级的，用于关闭所有日志记录.-->
        <properties>
            <property name="LOG_HOME">/home/logs</property>
            <!-- 日志备份目录 -->
            <property name="SERVER_NAME">mctoon-oaside</property>
        </properties>
<!--配置日志文件输出目录，此配置将日志输出到指定文件夹 -->
        <appenders>


            <!-- 单词解释： Match：匹配 DENY：拒绝 Mismatch：不匹配 ACCEPT：接受 -->
            <!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
            <!--输出日志的格式
             %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
             %p : 日志输出格式
             %c : logger的名称
             %m : 日志内容，即 logger.info("message")
             %n : 换行符
             %C : Java类名
             %L : 日志输出所在行数
             %M : 日志输出所在方法名
             hostName : 本地机器名
             hostAddress : 本地ip地址 -->
            <!--控制台打印 -->
            <Console name="CONSOLE" target="SYSTEM_OUT">
                <PatternLayout pattern="[${SERVER_NAME}] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] %-5p => %c.%M(%F:%L) - %m%n" />
            </Console>
            <!--当日志内容达到指定范围后，以某种定义规则打包日志文件 -->
            <!--<RollingFile name="RollingFile" fileName="${LOG_HOME}/${SERVER_NAME}.log" filePattern="${LOG_HOME}/${SERVER_NAME}-logs-%d{MM-dd-yyyy}-%i.log">-->
                <!--&lt;!&ndash;             <PatternLayout pattern="[${SERVER_NAME}] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n" /> &ndash;&gt;-->
                <!--<PatternLayout pattern="[${SERVER_NAME}] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] %-5p => %c.%M(%F:%L) - %m%n" />-->
                <!--<Policies>-->
                    <!--<TimeBasedTriggeringPolicy />-->
                    <!--<SizeBasedTriggeringPolicy size="50MB" />&lt;!&ndash;当日志大小达到50MB时，以上述filePattern定义的格式进行打包压缩 &ndash;&gt;-->
                <!--</Policies>-->
                <!--<DefaultRolloverStrategy max="20" />&lt;!&ndash;压缩包数量不超过20&ndash;&gt;-->
            <!--</RollingFile>-->
            <!-- 异步输出文件 -->
            <Async name="Async">
                <AppenderRef ref="RollingFile" />
            </Async>
        </appenders>
        <!--<loggers>-->

            <!--<root level="info">-->
                <!--&lt;!&ndash;             <appender-ref ref="CONSOLE" /> &ndash;&gt;-->
                <!--<appender-ref ref="RollingFile" />-->
                <!--&lt;!&ndash;             <appender-ref ref="Async" /> &ndash;&gt;-->
            <!--</root>-->
        <!--</loggers>-->

</Configuration>